$module: 'partner-grid';

.#{$module} {
  --border-color: #{$color-gray-200};
  padding-block-start: rem(72);
  padding-block-end: rem(72);

  @include mq(map-get($grid-breakpoints, 'lg')) {
    padding-block-start: rem(144);
    padding-block-end: rem(144);
  }

  &__title {
    color: $color-black;
    margin-block-end: .875em;
  }

  &__main {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas:
      "nav"
      "body"
      "mosaic";
    border: rem(1) solid var(--border-color);
    border-radius: rem(20);
    overflow: hidden;

    @include mq(map-get($grid-breakpoints, 'lg')) {
      grid-template-columns: 2fr 3fr;
      grid-template-areas:
        "nav mosaic"
        "body mosaic";
    }
  }

  &__nav {
    grid-area: nav;
    min-width: 0;
  }

  &__body {
    grid-area: body;
    min-width: 0;
    align-content: end;
    margin-inline: rem(20);
    margin-block: rem(20);
    overflow: hidden;

    @include mq(map-get($grid-breakpoints, 'md')) {
      margin-inline: rem(40);
      margin-block: rem(40);
    }
  }

  &__mosaic {
    grid-area: mosaic;
    min-width: 0;
    border-block-start: rem(1) solid var(--border-color);
    overflow: hidden;

    @include mq(map-get($grid-breakpoints, 'lg')) {
      border-block-start: none;
      border-inline-start: rem(1) solid var(--border-color);
    }
  }

  &__tabs {
    display: flex;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: rem(8);

    list-style: none;
    padding: 0;
    margin: 0;

    padding-inline: rem(20);
    padding-block: rem(20);

    @include mq(map-get($grid-breakpoints, 'md')) {
      padding-inline: rem(40);
    padding-block: rem(40);
    }
  }

  &__tab {
    min-width: 0;
  }

  &__panes {
    display: flex;
    align-items: flex-start;
    flex-direction: row;
    flex-wrap: nowrap;

    & > * {
      flex: 0 0 auto;
      width: 100%;
    }
  }

  &__content {
    opacity: 0;
    transform: translateY(#{rem(-16)});

    &.active {
      transition: transform 125ms ease-in-out, opacity 125ms linear;
      transform: translateY(0);
      opacity: 1;
    }
  }

  &__logos {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: rem(1);

    margin: 0;
    padding: 0;
    list-style: none;

    background-color: var(--border-color);
    opacity: 0;

    &.active {
      transition: opacity 125ms linear;
      opacity: 1;
    }
  }

  &__logo {
    flex: 0 0 auto;

    display: flex;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;

    width: calc(33.33% - #{rem(1)});
    aspect-ratio: 1;
    background-color: $color-white;

    &:nth-child(3n) {
      flex-grow: 1;
    }

    @include mq(map-get($grid-breakpoints, 'lg')) {
      aspect-ratio: 1.38;
    }
  }

  &__image {
    display: block;
    max-width: 85%;
    max-height: 85%;
  }

  &__button {
    display: inline-flex;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap;

    width: 100%;
    height: rem(40);
    padding-block: 0;
    padding-inline: rem(16);
    border: 0;
    border-radius: rem(20);
    background-color: transparent;

    color: $color-gray-300;
    font-size: rem(14);
    font-weight: 800;
    line-height: 1;
    text-transform: uppercase;

    transition: color 125ms linear, background-color 125ms linear;

    @include mq(map-get($grid-breakpoints, 'xl')) {
      height: rem(60);
      padding-inline: rem(28);
      border-radius: rem(30);
    }

    span {
      width: 100%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    &.active {
      color: $color-white;
      background-color: $color-primary;
    }

    @media (hover: hover) {
      &:not(.active):hover {
        color: $color-primary;
      }
    }

    &:focus-visible {
      outline-color: $color-primary;
      outline-offset: rem(4);
      outline-style: solid;
      outline-width: rem(4);
    }
  }
}
